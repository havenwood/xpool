== HEAD
	- add XPool#dry?
	Returns true when all subprocesses in the pool are busy.

	- XPool::Process#schedule raises when the process is dead
	Incase the process has been shutdown a call to XPool::Process#schedule will
	raise a RuntimeError.

	- XPool#schedule raises when the pool has no active subprocesses
	Incase the pool has been shutdown a call to XPool#schedule will raise a 
	RuntimeError.

	- add XPool::Process#frequency
	Returns the number of times a process has been asked to schedule work.
		
	- XPool#schedule schedules work on the least busy subprocess
	The process picked to run a unit of work is the one who is least busy. 
	"least busy" means it has been asked to schedule the least amount of 
	work.

	- XPool#schedule returns a XPool::Process object.
	The process that has been picked to run your unit of work is returned 
	by schedule in case you want to interact with the process later on.

	- Add XPool#broadcast
	The broadcast method can distribute one unit of work across all 
	subprocesses in the pool.

	- Add XPool::Process#busy?
	Returns true when the process is executing a unit of work.	

== v0.3.0
	* Add XPool#size.
	It returns the number of alive subprocesses in the pool.

== v0.2.0
	* Minor README & API documentation improvements.
	* Change the default number of subprocesses to spawn in a pool from 10 to 5.
