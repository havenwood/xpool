== HEAD
	- upgrade ichannel to ~> 5.1.1
	See the ichannel ChangeLog.txt for details.

	- add XPool::Process#idle?
	Returns true when the subprocess is considered idle. "idle" means the
	subprocess is not executing a unit of work.

	- conserve CPU consumption by sleeping for a short period of time.
	By sleeping for a short period of time we avoid pegging the CPU at 
	80-100% when a subprocess is idle.

	- add XPool::Process#backtrace
	Returns the backtrace of the exception that caused a subprocess to fail. Returns 
	nil whenever the subprocess is not in a failed state.

	- add XPool::Process#failed?
	Returns true when a unit of work does not handle an exception, which causes
	the subprocess it is running in to exit. A failed subprocess can be restarted
	through Process#restart.

	- add XPool::Process#restart
	Restarts a subprocess by gracefully shutting down and respawning a new subprocess.

	- add XPool#dry?
	Returns true when all subprocesses in the pool are busy.

	- XPool::Process#schedule raises when the subprocess is dead
	Incase the subprocess has been shutdown a call to XPool::Process#schedule will
	raise a RuntimeError.

	- XPool#schedule raises when the pool has no active subprocesses
	Incase the pool has been shutdown a call to XPool#schedule will raise a 
	RuntimeError.

	- add XPool::Process#frequency
	Returns the number of times a subprocess has been asked to schedule work.
		
	- XPool#schedule schedules work on the least busy subprocess
	The subprocess picked to run a unit of work is the one who is least busy. 
	"least busy" means it has been asked to schedule the least amount of 
	work.

	- XPool#schedule returns a XPool::Process object.
	The subprocess that has been picked to run your unit of work is returned 
	by schedule in case you want to interact with the subprocess later on.

	- Add XPool#broadcast
	The broadcast method can distribute one unit of work across all 
	subprocesses in the pool.

	- Add XPool::Process#busy?
	Returns true when the subprocess is executing a unit of work.	

== v0.3.0
	* Add XPool#size.
	It returns the number of alive subprocesses in the pool.

== v0.2.0
	* Minor README & API documentation improvements.
	* Change the default number of subprocesses to spawn in a pool from 10 to 5.
